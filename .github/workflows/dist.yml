name: Build

on:
  pull_request:
    branches: [ master ]
  push:
    tags:
      - '*'

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3.2.0
        with:
          platforms: all

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: cp36-* cp37-* cp38-* cp313-* pp* *musllinux*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS_LINUX: auto64 aarch64
          CIBW_ARCHS_MACOS: auto64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_BEFORE_BUILD: git submodule update --init --recursive
          CIBW_BEFORE_TEST: pip install -e .[dev]
          CIBW_TEST_COMMAND_WINDOWS: ruff check {project}/pelutils || true && pytest {project}/tests
          CIBW_TEST_COMMAND_MACOS: ruff check {project}/pelutils || true && pytest {project}/tests
          CIBW_TEST_COMMAND_LINUX: ruff check {project}/pelutils || true && timeout 150s pytest {project}/tests || true

      # v4 is currently the newest, but there is some breaking change with it that causes the run to fail
      # https://github.com/actions/upload-artifact/issues/478
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make source dist
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4.2.2
      with:
        submodules: true

    - name: Build source dist
      run: python setup.py sdist

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz

  upload_all:
    needs: [ build_wheels, make_sdist ]
    runs-on: ubuntu-22.04
    # Upload to PyPI when pushing new version tag
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.12.3
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
